<!-- TodoList.schtml modifies the TodoList class in the previous model layer.
     Setting 'needsRefresh' here because the 'getRemaining' method needs to be
     refreshed after any changes to the page are made. -->
<html needsRefresh="true">
   <head>
      <link rel="stylesheet" type="text/css" href="todoStyle.css" />
   </head>
  <body>
     <div class="appFrame">
        <h2>Todo List</h2>
        <div id="todoControl">
           <!-- These next two expressions are updated incrementally in response to property change events.  For 'getSize' we detect
                change events when the 'todos' list changes because it uses sc.util.ArrayList.  It's trickier with getRemaining 
                because it also needs to run after any change to a TodoItem's 'complete' value.  To handle that, rather than trigger
                an extra event during that event, we take the easy way out and set needsRefresh on the page.  In that mode, after
                any input events are fired, we revalidate all bindings in a 'do later' operation. -->
           <span><%= getRemaining(todos) %> of <%= getSize(todos) %> to do</span>
           <!-- The clickEvent property is updated when the anchor tag is clicked on.  When that happens the binding calls: 'removeComplete()' -->
           [ <a href="#" clickEvent="=: removeComplete()">remove completed</a> ]
           <ul>
              <!-- Repeat the li tag once for each element in the todos list.
                As the list changes, tags are added/removed as needed -->
              <li repeat=":= todos" repeatVarName="todo">
                 <!-- Set checked to the value of todo.complete and vice-versa -->
                 <input type="checkbox" checked=":=: todo.complete"/>
                 <!-- Add a class to this span tag when it is done -->
                 <span class='<%= "complete-" + todo.complete %>'><%= todo.text%></span>
              </li>
           </ul>
           <form submitEvent="=: addTodoEntry()">
              <input type="text" value=":=: todoText" size="45" placeholder="enter todo entry here"/>
              <input type="submit" value="Add" disabled=':= TextUtil.length(todoText) == 0'/>
           </form>
        </div>
     </div>
   </body>
</html>
