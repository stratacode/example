<%@
   import java.util.Arrays;
   import sc.obj.ManualGetSet;
   import sc.obj.Sync;
   import sc.obj.IObjectId;
%>
<html>
   <%!
      @Sync
      class Author implements IObjectId {
         String name;
         List<Book> books = new ArrayList<Book>();

         Author(String name, Book[] books) {
            this.name = name;
            if (books != null) {
               this.books.addAll(Arrays.asList(books));
               for (Book book:books)
                  book.author = this;
            }
         }

         public String getObjectId() {
            return name.replace(" ", "_");
         }
      }

      @Sync
      class Book implements IObjectId {
         String title;
         Author author;

         Book(String title) {
            this.title = title;
         }

         String getObjectId() {
            return title.replace(" ", "_");
         }
      }

      @Sync
      ArrayList<Author> authors = new ArrayList<Author>(Arrays.asList(
           new Author[]{new Author("Isaac Asimov", new Book[] {new Book("I Robot"), new Book("Foundation")}),
                        new Author("Octavia Butler", new Book[] {new Book("Adulthood Rites")}),
                        new Author("William Gibson", new Book[] {new Book("Neuromancer")})}));

      @Sync
      Author currentAuthor;

      @Sync
      Book currentBook;

      void changeCurrentAuthor(Author author) {
         if (author != currentAuthor) {
            this.currentBook = null;
         }
         currentAuthor = author;
      }
      void changeCurrentBook(Book book) {
         if (book != null)
            currentAuthor = book.author;
         currentBook = book;
      }
      void addBook(Book book) {
         currentAuthor.books.add(book);
         book.author = currentAuthor;
      }
      void removeBook() {
         currentAuthor.books.remove(currentBook);
         currentBook = null;
      }
      void removeAuthor() {
         authors.remove(currentAuthor);
         currentAuthor = null;
      }
   %>
   <body>
      <div id="appFrame">
         <dl id="showAuthors" repeat=":= authors" repeatVarName="author">
            <dt id="authorName" clickEvent="=: changeCurrentAuthor(author)" class=':= currentAuthor == author ? "selected" : ""'><%= author.name %>:</dt>
            <dd>
               <span id="showBooks" repeat=":= author.books" repeatVarName="book" clickEvent="=: changeCurrentBook(book)" class=':= currentBook == book ? "selected" : ""'>
                  <%= book.title + (repeatIndex == author.books.size()-1 ? "" : ",") %>
               </span>
            </dd>
         </dl>
         Title: <input type="text" id="newBookTitle"/>
                <input type="button" value="Add book"
                       clickEvent="=: addBook(new Book(newBookTitle.value))"
                       clickEvent='=: newBookTitle.value = ""'
                       disabled=":= currentAuthor == null || TextUtil.length(newBookTitle.value) == 0"/>
         <p/>
         Name: <input type="text" id="newAuthorName"/>
               <input type="button" value="Add author"
                      clickEvent="=: authors.add(new Author(newAuthorName.value, null))"
                      clickEvent='=: newAuthorName.value = ""'
                      disabled=":= TextUtil.length(newAuthorName.value) == 0"/>
         <p/>
         <input type="button" value="Remove author" clickEvent="=: removeAuthor()" disabled=":= currentAuthor == null"/>
         <input type="button" value="Remove book" clickEvent="=: removeBook()" disabled=":= currentBook == null"/>
      </div>
   </body>
   <style>
      .selected {
         background: #aaa;
      }
   </style>
</html>
